@model grade_management.Models.SubjectModel

@{
    ViewData["Title"] = $"Danh sách sinh viên - {Model.SubjectName}";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="page-title">Danh sách sinh viên</h1>
            <p class="text-muted">
                <i class="fas fa-book me-2"></i>@Model.SubjectName
                <span class="mx-3">|</span>
                <i class="fas fa-hashtag me-2"></i>@Model.SubjectCode
            </p>
        </div>
        <div>
            <a asp-action="ExportToExcel" asp-route-id="@Model.SubjectID" class="btn btn-success me-2">
                <i class="fas fa-file-excel"></i> Xuất Excel
            </a>
            <a asp-action="Details" asp-route-id="@Model.SubjectID" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> Quay lại chi tiết môn học
            </a>
        </div>
    </div>

    @if (!Model.Grades.Any())
    {
        <div class="alert alert-info" role="alert">
            <i class="fas fa-info-circle me-2"></i>
            Chưa có sinh viên nào đăng ký môn học này.
        </div>
    }
    else
    {
        <div class="card shadow-sm">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Mã sinh viên</th>
                                <th>Họ và tên</th>
                                <th>Lớp</th>
                                <th>Điểm quá trình</th>
                                <th>Điểm cuối kỳ</th>
                                <th>Thang điểm 10</th>
                                <th>Thang điểm 4</th>
                                <th>Điểm chữ</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var grade in Model.Grades.OrderBy(g => g.Student.StudentName))
                            {
                                <tr>
                                    <td>@grade.Student.StudentCode</td>
                                    <td>@grade.Student.StudentName</td>
                                    <td>@grade.Student.Class?.ClassName</td>
                                    <td>@grade.FormativeGrade.ToString("F1")</td>
                                    <td>@grade.FinalGrade.ToString("F1")</td>
                                    <td>@grade.TenGradeScale.ToString("F1")</td>
                                    <td>@grade.FourGradeScale.ToString("F1")</td>
                                    <td>
                                        <span class="badge @(grade.GradeToLetter.StartsWith("A") ? "bg-success" : 
                                                           grade.GradeToLetter.StartsWith("B") ? "bg-primary" :
                                                           grade.GradeToLetter.StartsWith("C") ? "bg-info" :
                                                           grade.GradeToLetter.StartsWith("D") ? "bg-warning" : "bg-danger")">
                                            @grade.GradeToLetter
                                        </span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>

@section Styles {
    <style>
        .card {
            border: 1px solid var(--border-color);
            border-radius: 8px;
            background: white;
        }

        .card-body {
            padding: 1.5rem;
        }

        .table {
            margin-bottom: 0;
        }

        .table th {
            font-weight: 600;
            color: var(--text-secondary);
            border-bottom-width: 1px;
        }

        .table td {
            vertical-align: middle;
        }

        .badge {
            padding: 0.5rem 0.75rem;
            border-radius: 4px;
            font-weight: 500;
            font-size: 0.875rem;
        }

        .bg-success {
            background-color: rgba(25, 135, 84, 0.1) !important;
            color: #198754;
        }

        .bg-primary {
            background-color: rgba(13, 110, 253, 0.1) !important;
            color: #0d6efd;
        }

        .bg-info {
            background-color: rgba(13, 202, 240, 0.1) !important;
            color: #0dcaf0;
        }

        .bg-warning {
            background-color: rgba(255, 193, 7, 0.1) !important;
            color: #ffc107;
        }

        .bg-danger {
            background-color: rgba(220, 53, 69, 0.1) !important;
            color: #dc3545;
        }

        .btn-secondary {
            background-color: #e9ecef;
            border: none;
            color: var(--text-secondary);
            padding: 0.75rem 1.5rem;
            border-radius: 6px;
            font-weight: 500;
            transition: all var(--transition-speed) ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn-secondary:hover {
            background-color: #dee2e6;
            color: var(--text-primary);
        }

        .btn-success {
            background-color: #198754;
            border: none;
            color: white;
            padding: 0.75rem 1.5rem;
            border-radius: 6px;
            font-weight: 500;
            transition: all var(--transition-speed) ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn-success:hover {
            background-color: #157347;
            color: white;
            transform: translateY(-1px);
        }
    </style>
} 