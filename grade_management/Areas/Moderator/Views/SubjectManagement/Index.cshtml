@model IEnumerable<grade_management.Models.SubjectModel>

@{
    ViewData["Title"] = "Xem môn học";
}

<div class="container">
    <h1 class="page-title">Xem môn học</h1>

    <div class="d-flex justify-content-end align-items-center mb-4">
        <div class="search-filter">
            <form asp-action="Index" method="get" class="d-flex">
                <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control me-2" placeholder="Tìm kiếm môn học...">
                <button type="submit" class="btn-filter">
                    <i class="fas fa-search"></i> Tìm kiếm
                </button>
            </form>
        </div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (!Model.Any() && !string.IsNullOrEmpty(ViewData["CurrentFilter"]?.ToString()))
    {
        <div class="alert alert-info" role="alert">
            <i class="fas fa-info-circle me-2"></i>
            Không tìm thấy môn học phù hợp với "@ViewData["CurrentFilter"]"
        </div>
    }

    <div class="data-table">
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Mã môn học</th>
                        <th>Tên môn học</th>
                        <th>Trạng thái</th>
                        <th>Thời gian</th>
                        <th>Tín chỉ</th>
                        <th>Thao tác</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.SubjectCode)</td>
                            <td>@Html.DisplayFor(modelItem => item.SubjectName)</td>
                            <td>
                                <span class="badge @(item.SubjectStatus == "Open" ? "bg-success" : item.SubjectStatus == "Full" ? "bg-warning" : "bg-danger")">
                                    @(item.SubjectStatus == "Open" ? "Mở" : item.SubjectStatus == "Full" ? "Đầy" : item.SubjectStatus == "Closed" ? "Đóng" : item.SubjectStatus)
                                </span>
                            </td>
                            <td>@(item.SubjectTime == "Morning" ? "Sáng" : item.SubjectTime == "Afternoon" ? "Chiều" : item.SubjectTime == "Evening" ? "Tối" : item.SubjectTime)</td>
                            <td>@Html.DisplayFor(modelItem => item.SubjectCredits)</td>
                            <td>
                                <a asp-action="Details" asp-route-id="@item.SubjectID" class="btn-action">
                                    <i class="fas fa-info-circle"></i> Chi tiết
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .search-filter {
            max-width: 300px;
        }

        .btn-action {
            display: inline-flex;
            align-items: center;
            gap: 0.25rem;
            text-decoration: none;
            color: var(--text-secondary);
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
            transition: all var(--transition-speed) ease;
        }

        .btn-action:hover {
            background-color: #f8f9fa;
            color: var(--primary-color);
        }

        .text-danger {
            color: var(--danger-color) !important;
        }

        .text-danger:hover {
            background-color: #fff5f7;
        }

        .alert {
            padding: 1rem;
            margin-bottom: 1rem;
            border-radius: 6px;
            display: flex;
            align-items: center;
        }

        .alert-info {
            background-color: rgba(13, 202, 240, 0.1);
            border: 1px solid rgba(13, 202, 240, 0.2);
            color: #0dcaf0;
        }

        .me-2 {
            margin-right: 0.5rem;
        }

        .btn-add {
            background-color: var(--primary-color);
            border: none;
            color: white;
            padding: 0.75rem 1.5rem;
            border-radius: 6px;
            font-weight: 500;
            transition: all var(--transition-speed) ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn-add:hover {
            background-color: var(--primary-dark);
            color: white;
            transform: translateY(-1px);
        }

        .btn-filter {
            background-color: var(--primary-color);
            border: none;
            color: white;
            padding: 0.375rem 0.75rem;
            border-radius: 4px;
            font-weight: 500;
            transition: all var(--transition-speed) ease;
        }

        .btn-filter:hover {
            background-color: var(--primary-dark);
        }

        .badge {
            padding: 0.5rem 0.75rem;
            border-radius: 4px;
            font-weight: 500;
            font-size: 0.875rem;
        }

        .bg-success {
            background-color: rgba(25, 135, 84, 0.1) !important;
            color: #198754;
        }

        .bg-warning {
            background-color: rgba(255, 193, 7, 0.1) !important;
            color: #ffc107;
        }

        .bg-danger {
            background-color: rgba(220, 53, 69, 0.1) !important;
            color: #dc3545;
        }
    </style>
} 